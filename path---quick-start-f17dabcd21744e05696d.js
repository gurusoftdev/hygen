webpackJsonp([0xe43a91ce442e],{265:function(e,n){e.exports={data:{allPostTitles:{edges:[{node:{frontmatter:{title:"",doc:null,section:null,type:null},fields:{slug:"/"}}},{node:{frontmatter:{title:"Hygen: The scalable code generator that lives in your project",doc:null,section:null,type:null},fields:{slug:"/hygen-the-scalable-code-generator-that-lives-in-your-project"}}},{node:{frontmatter:{title:"Express",doc:3,section:2,type:"doc"},fields:{slug:"/express"}}},{node:{frontmatter:{title:"Generators",doc:2,section:1,type:"doc"},fields:{slug:"/generators"}}},{node:{frontmatter:{title:"Quick Start",doc:1,section:1,type:"doc"},fields:{slug:"/quick-start"}}},{node:{frontmatter:{title:"React Native",doc:2,section:2,type:"doc"},fields:{slug:"/react-native"}}},{node:{frontmatter:{title:"Redux",doc:1,section:2,type:"doc"},fields:{slug:"/redux"}}},{node:{frontmatter:{title:"Templates",doc:3,section:1,type:"doc"},fields:{slug:"/templates"}}},{node:{frontmatter:{title:"",doc:null,section:null,type:null},fields:{slug:"/"}}}]},postBySlug:{html:'<p>Install <code>hygen</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>$ npm i -g hygen</code></pre>\n      </div>\n<p>Supply a <code>GENERATOR ACTION</code> pair:</p>\n<div class="gatsby-highlight">\n      <pre class="language-none"><code>$ hygen mailer new\n         |      ^----- action\n         `------------ generator</code></pre>\n      </div>\n<p>After a fresh install, <code>hygen</code> will use the example generators it comes with. Let\'s try one:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code><span class="gatsby-highlight-code-line">$ hygen example<span class="token punctuation">-</span>prompt new\n</span><span class="token punctuation">?</span> What\'s your message<span class="token punctuation">?</span> welcome\n\nLoaded templates<span class="token punctuation">:</span> src/templates\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> hygen<span class="token punctuation">-</span>examples/mailers/unnamed.js\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> hygen<span class="token punctuation">-</span>examples/mailers/hello/html.ejs\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> hygen<span class="token punctuation">-</span>examples/mailers/hello/subject.ejs\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> hygen<span class="token punctuation">-</span>examples/mailers/hello/text.ejs\n      <span class="token key atrule">inject</span><span class="token punctuation">:</span> hygen<span class="token punctuation">-</span>examples/mailers/hello/html.ejs\n</code></pre>\n      </div>\n<p>There are a few more ways to play with the examples:</p>\n<div class="gatsby-highlight">\n      <pre class="language-perl"><code><span class="token comment"># generate all files, with a name variable</span>\n$ hygen example<span class="token operator">-</span>prompt new <span class="token operator">--</span>name reporter\n\n\n<span class="token comment"># generate one specific file</span>\n$ hygen example<span class="token operator">-</span>prompt new<span class="token punctuation">:</span>mailer <span class="token operator">--</span>name reporter\n\n\n<span class="token comment"># generate all resources that correspond to a regular expression</span>\n$ hygen example<span class="token operator">-</span>prompt <span class="token string">\'new:.*html\'</span> <span class="token operator">--</span>name reporter\n</code></pre>\n      </div>\n<h2 id="bootstrapping-your-project"><a href="#bootstrapping-your-project" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bootstrapping Your Project</h2>\n<p>Use <code>hygen init self</code> to start using it in your own project (it also gets rid of the example generators).</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code>$ cd your<span class="token punctuation">-</span>project\n<span class="gatsby-highlight-code-line">$ hygen init self\n</span>\nLoaded templates<span class="token punctuation">:</span> src/templates\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> _templates/generator/with<span class="token punctuation">-</span>prompt/hello.ejs.t\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> _templates/generator/with<span class="token punctuation">-</span>prompt/prompt.ejs.t\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> _templates/generator/new/hello.ejs.t\n</code></pre>\n      </div>\n<p>This creates a project-local <code>_templates</code> folder for you at your source root with two helper generators that saves you time:</p>\n<ul>\n<li><code>hygen generator new --name generatorName</code> - builds a new generator for you</li>\n<li><code>with-prompt new --name generatorName</code> - the same as before, only this one will be prompt driven.</li>\n</ul>\n<div class="custom-block-info"><h6 id="template-locality"><a href="#template-locality" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Template Locality</h6><p>On multi-team projects, each team can have their own templates right there in the shared repo.</p></div>\n<p>Still in your project root, let\'s create a new generator now:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code>$ hygen generator new <span class="token punctuation">-</span><span class="token punctuation">-</span>name mygen\nLoaded templates<span class="token punctuation">:</span> _templates\n       <span class="token key atrule">added</span><span class="token punctuation">:</span> _templates/mygen/new/hello.ejs.t\n</code></pre>\n      </div>\n<p>And let\'s use it:</p>\n<div class="gatsby-highlight">\n      <pre class="language-yaml"><code>$ hygen mygen new\n\nLoaded templates<span class="token punctuation">:</span> _templates\n<span class="gatsby-highlight-code-line">       <span class="token key atrule">added</span><span class="token punctuation">:</span> app/hello.js\n</span></code></pre>\n      </div>\n<div class="custom-block-info"><h6 id="did-you-notice"><a href="#did-you-notice" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Did You Notice?</h6><p>Instead of bundling the <code>hygen generator new</code> command in <code>hygen</code>, we chose to <em>copy</em> it to your local templates folder.</p><p>In this way you can even tweak the way <code>hygen</code> generates new generators. It scales to a set up with different teams, each with its own preference.</p></div>\n<p>That\'s it! we\'ve done a basic walkthrough of <code>hygen</code>. Next up is a detailed overview of <a href="generators">generators</a> and <a href="templates">templates</a>.</p>',timeToRead:2,excerpt:"Install  hygen : Supply a  GENERATOR ACTION  pair: After a fresh install,  hygen  will use the example generators it comes with. Let's tryâ€¦",frontmatter:{title:"Quick Start"},fields:{slug:"/quick-start"}}},pathContext:{slug:"/quick-start"}}}});
//# sourceMappingURL=path---quick-start-f17dabcd21744e05696d.js.map